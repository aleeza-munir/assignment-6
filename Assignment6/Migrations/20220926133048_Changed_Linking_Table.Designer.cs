// <auto-generated />
using Assignment6.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment6.Migrations
{
    [DbContext(typeof(MovieCharactersDBContext))]
    [Migration("20220926133048_Changed_Linking_Table")]
    partial class Changed_Linking_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment6.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Strongest Avenger",
                            FullName = "Hulk",
                            Gender = "M",
                            Picture = "https://th.bing.com/th/id/R.e9fc32d24fa6fde909bebf55074d7333?rik=%2bqVK3hYxz7Zl4w&pid=ImgRaw&r=0"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Cap",
                            FullName = "Captain America",
                            Gender = "M",
                            Picture = "https://hdcraft.club/wp-content/uploads/2019/11/captain-america-full-hd-34.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "IM",
                            FullName = "Iron Man",
                            Gender = "M",
                            Picture = "https://preview.redd.it/ly5rmonemmo01.jpg?auto=webp&s=6ac462d6711833d0fce33d7699b1752271fe08b1"
                        });
                });

            modelBuilder.Entity("Assignment6.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Marvel Comics turned into movies",
                            Name = "Marvel Cinematic Universe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Some Lords of Some Rings",
                            Name = "Lord of The Rings"
                        });
                });

            modelBuilder.Entity("Assignment6.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Russo Brothers",
                            FranchiseId = 1,
                            Genre = "Action",
                            MovieTitle = "Avengers Age of Ultron",
                            Picture = "https://tse2.mm.bing.net/th/id/OIP.gv3p5fY2oDpk8bFvXAPJEQHaEo?pid=ImgDet&rs=1",
                            ReleaseYear = 2010,
                            Trailer = "https://www.youtube.com/watch?v=U2fO094Kk58"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Russo Brothers",
                            FranchiseId = 1,
                            Genre = "Comedy",
                            MovieTitle = "Avengers Endgame",
                            Picture = "https://tse4.mm.bing.net/th/id/OIP.1C8EomfdMj6xlDtR6WK5OQHaEK?pid=ImgDet&rs=1",
                            ReleaseYear = 2018,
                            Trailer = "https://www.youtube.com/watch?v=hA6hldpSTF8"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Some Lord",
                            FranchiseId = 1,
                            Genre = "Sci-Fi",
                            MovieTitle = "Lord of The Rings 1",
                            Picture = "https://tse2.mm.bing.net/th/id/OIP.aB0SWxNACEUz_lVtBFroyQHaEo?pid=ImgDet&rs=1",
                            ReleaseYear = 2012,
                            Trailer = "https://www.youtube.com/watch?v=uYnQDsaxHZU"
                        });
                });

            modelBuilder.Entity("MovieCharacters", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("MovieCharacters");

                    b.HasData(
                        new
                        {
                            MoviesId = 1,
                            CharactersId = 1
                        },
                        new
                        {
                            MoviesId = 1,
                            CharactersId = 2
                        },
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 1
                        },
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 3
                        },
                        new
                        {
                            MoviesId = 3,
                            CharactersId = 3
                        });
                });

            modelBuilder.Entity("Assignment6.Models.Movie", b =>
                {
                    b.HasOne("Assignment6.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieCharacters", b =>
                {
                    b.HasOne("Assignment6.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment6.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment6.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
